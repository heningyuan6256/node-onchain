import React from 'react';
import { Table, TableProps } from 'antd';
import { FormInstance } from 'antd/lib/form';
import { BaseComponentProps } from '../../typings';
import 'react-contexify/dist/ReactContexify.css';
import { contentProps } from '../PlmFormItem';
import { TableFooterDataRender } from './type';
import { BasicsAttribute } from '../../utils/attribute';
import { Clipboard, useClipboard } from './useClipboard';
type EditableTableProps = Parameters<typeof Table>[0];
type ColumnTypes = Exclude<EditableTableProps['columns'], undefined>;
export type singleColumnType = PlmColumn;
export type TableColumnsType = singleColumnType[];
export interface PlmTableProps extends TableProps<any>, BaseComponentProps {
    selectedCell?: Record<string, any>;
    columns: TableColumnsType;
    onSubmit?: (values: any, col: any) => void;
    onSelectCell?: () => void;
    onDoubleClick?: (col: any, record: any) => Promise<boolean> | boolean;
    onTableHeightChange?: (height: number) => void;
    onFill?: (type: string, values: any) => void;
    onBeforeScroll?: () => boolean;
    isTree?: boolean;
    /**
     * Table的粘贴回调
     * @param selectedCell 粘贴的selectedCell位置
     * @param pasteData 粘贴数据
     * @param columns 用于粘贴多列,拿到后续每列的dataIndex
     * @returns
     */
    onPaste?: (pasteData: Record<string, any>) => void;
    clipboard?: Clipboard;
    tab?: string;
    pageNo?: number;
    pageSize?: number;
    total?: number;
    scrollUpdate?: (isFullscreen: boolean, autoHeight: number) => void;
    toggleFullscreen?: () => void;
    isFullscreen?: boolean;
    showcheckbox?: boolean;
    canselectcell?: boolean;
    tableKey?: string;
    onScroll?: (pageNo: number) => void;
    onFilterAndSorter?: (sorters: string, filters: string, sortersField: string, filtersObject: any, extra?: {
        isFooterRefresh?: boolean;
    }) => void;
    hideFooter?: boolean;
    hideTableCount?: boolean;
    /** 全屏时tableHeight需要减少的高度（例如有按钮在时，这个值为的按钮高度 40） */
    fullScreenMinusHeight?: number;
    searchHeight?: boolean;
    /** 自定义渲染底部数据 */
    tableFooterDateRender?: TableFooterDataRender;
    tableFooterClassName?: string;
}
export type PlmColumn = ColumnTypes[number] & {
    apicode?: string;
    sort?: number;
    formitem?: contentProps;
    search?: contentProps;
    editable?: boolean;
    dataIndex: string;
    required?: boolean;
    addDefValue?: string;
    dataFrom?: '0' | '1' | '2';
    canNotView?: boolean;
    isUser?: boolean;
    attr?: Readonly<BasicsAttribute>;
};
export type PlmTableColumnProps = PlmColumn[];
export declare const EditableContext: React.Context<FormInstance<any> | null>;
export interface PlmTableRef {
    scrollTo: (y: number) => void;
    clearFilters: () => void;
    setTableFiltered: (params: {
        sort: (data: any) => Record<string, any>;
        screen: (data: any) => Record<string, any[]>;
    }) => void;
    clipboard: ReturnType<typeof useClipboard>;
}
declare const PlmTable: React.FC<PlmTableProps>;
export default PlmTable;
