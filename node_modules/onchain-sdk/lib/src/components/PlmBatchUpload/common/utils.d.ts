export declare class TabUtils {
    /**
     * 根据属性生成列头
     * @param
     * @returns
     */
    static generateTableColumn: ({ attributeVoList, previewFile, }: {
        attributeVoList: Record<string, any>[];
        previewFile?: ((file: any) => any) | undefined;
    }) => Promise<{
        originalTableColumn: Record<string, any>[];
        columns: {
            title: any;
            dataIndex: any;
            width: number;
            ellipsis: boolean;
            align: undefined;
            sorter: boolean;
            sort: any;
            editable: boolean;
            valueType: any;
            formitem: ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "Input";
                cannotread?: string | undefined;
                middleware?: any;
                isbomtag?: boolean | undefined;
                props?: Record<string, any> | import("antd").InputProps | undefined;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "PopupSelect";
                cannotread?: string | undefined;
                middleware?: any;
                props?: any;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "SearchSelect";
                middleware?: any;
                cannotread?: string | undefined;
                props?: any;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "Checkbox.Group";
                cannotread?: string | undefined;
                middleware?: any;
                props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "Input.Password";
                cannotread?: string | undefined;
                props?: any;
                middleware?: any;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "TimePicker.RangePicker";
                cannotread?: string | undefined;
                middleware?: any;
                props?: any;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "Image";
                cannotread?: string | undefined;
                middleware?: any;
                props: {};
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "File";
                cannotread?: string | undefined;
                middleware?: any;
                props: {};
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "Cascader";
                cannotread?: string | undefined;
                middleware?: any;
                props?: any;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "Radio.Group";
                cannotread?: string | undefined;
                middleware?: any;
                props?: import("antd").RadioGroupProps | undefined;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "dynamicTable";
                middleware?: any;
                cannotread?: string | undefined;
                props?: any;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "Markdown";
                cannotread?: string | undefined;
                middleware?: any;
                props?: any;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "InputFile";
                cannotread?: string | undefined;
                middleware?: any;
                props?: any;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "DocumentFile";
                middleware?: any;
                cannotread?: string | undefined;
                props?: any;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "CompositeForm";
                middleware?: any;
                cannotread?: string | undefined;
                props?: any;
            }) | ({
                formatFormProps?: ((props: any, record: any, columnApicode: string) => any & ({
                    type: "Input";
                    cannotread?: string | undefined;
                    middleware?: any;
                    isbomtag?: boolean | undefined;
                    props?: Record<string, any> | import("antd").InputProps | undefined;
                } | {
                    type: "Select";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("../../PlmSelect").PlmSelectProps | undefined;
                } | {
                    type: "PopupSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "SearchSelect";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Checkbox.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/checkbox").CheckboxGroupProps | undefined;
                } | {
                    type: "Checkbox";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").CheckboxProps | undefined;
                } | {
                    type: "Input.TextArea";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/input").TextAreaProps | undefined;
                } | {
                    type: "Input.Password";
                    cannotread?: string | undefined;
                    props?: any;
                    middleware?: any;
                } | {
                    type: "Date";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").DatePickerProps | undefined;
                } | {
                    type: "DatePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd/lib/date-picker/generatePicker").RangePickerProps<any> | undefined;
                } | {
                    type: "TimePicker.RangePicker";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "Image";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "File";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props: {};
                } | {
                    type: "Switch";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").SwitchProps | undefined;
                } | {
                    type: "Number";
                    cannotread?: string | undefined;
                    props?: import("antd").InputNumberProps<import("@rc-component/mini-decimal").ValueType> | undefined;
                    middleware?: any;
                } | {
                    type: "Cascader";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "TreeSelect";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").TreeSelectProps<any, import("rc-tree-select/lib/TreeSelect").DefaultOptionType> | undefined;
                } | {
                    type: "Radio";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioProps | undefined;
                } | {
                    type: "Radio.Group";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: import("antd").RadioGroupProps | undefined;
                } | {
                    type: "Slider";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: import("antd").SliderSingleProps | undefined;
                } | {
                    type: "dynamicTable";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Markdown";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "InputFile";
                    cannotread?: string | undefined;
                    middleware?: any;
                    props?: any;
                } | {
                    type: "DocumentFile";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "SelectTransfer";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: (import("../../PlmSelect").PlmSelectProps & {
                        attr: import("../../../utils/attribute").BasicsAttribute<string>;
                        allListOptions: Record<string, any[]>;
                        popoverTransfer: Omit<import("../../PlmPopoverTransfer").PlmPopoverTransferProps, "attr" | "allListOptions">;
                    }) | undefined;
                } | {
                    type: "CompositeForm";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                } | {
                    type: "Title";
                    middleware?: any;
                    cannotread?: string | undefined;
                    props?: any;
                })) | undefined;
            } & {
                type: "Title";
                middleware?: any;
                cannotread?: string | undefined;
                props?: any;
            });
            isUser: boolean;
            apicode: any;
            fixed: boolean;
            required: any;
            dataFrom: any;
            addDefValue: any;
            canNotView: boolean;
            render: any;
            id: any;
        }[];
        listCodeMap: Record<string, any>;
    }>;
    static converBytes(size: number): string;
}
