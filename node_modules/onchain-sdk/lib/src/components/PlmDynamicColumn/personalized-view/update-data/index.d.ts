import React from 'react';
import { Config as PropsConfig, ServerData } from '../../hooks';
import { APP } from '../../../../typings';
import { BasicsAttribute } from '../../../../utils/attribute';
import { GetListViewParams } from '..';
type Open = (params: Config) => void;
type Close = () => void;
export interface UpdateDateRef {
    open: Open;
    close: Close;
}
interface Props {
    config: PropsConfig;
    itemCode: string | number;
    tabCode: string | number;
    attrs: BasicsAttribute[];
    instance: APP.instanceInfoType;
    updateSelect: (row: ServerData) => void;
    getListView?: (params?: GetListViewParams) => void;
    getSub: () => Promise<any[]>;
}
interface Config {
    type: 'add' | 'display' | 'edit' | 'saveAs';
    row?: ServerData;
}
declare const UpdateDate: React.ForwardRefExoticComponent<Props & React.RefAttributes<UpdateDateRef>>;
export default UpdateDate;
