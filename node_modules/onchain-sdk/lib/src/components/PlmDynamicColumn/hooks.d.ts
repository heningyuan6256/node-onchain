import { APP } from '../../typings';
import { BasicsAttribute } from '../../utils/attribute';
import { BasicsItemCode } from '../../utils/itemCode';
import React from 'react';
import { singleColumnType } from '../PlmTable';
import { tabInfoProps } from '../PlmTabTemplate';
import { Columns } from './types';
export declare const useDynamicColumn: (columns: Columns, config?: Props, fn?: ((columns: Columns) => Columns) | undefined, deps?: any[]) => ({
    columns: Columns;
    config: undefined;
    node: JSX.Element;
    loading: boolean;
    viewId: string;
} & [Columns, undefined, JSX.Element, boolean, string]) | ({
    columns: Columns;
    config: undefined;
    node: JSX.Element;
    loading: boolean;
    viewId: string;
} & [Columns, React.RefObject<ConfigColumnsRef>, JSX.Element, boolean, string]) | ({
    columns: Columns;
    config: React.RefObject<ConfigColumnsRef>;
    node: JSX.Element;
    loading: boolean;
    viewId: string;
} & [Columns, React.RefObject<ConfigColumnsRef>, JSX.Element, boolean, string]);
interface Props {
    itemCode: string | number | BasicsItemCode;
    tabInfo: tabInfoProps;
    attrs: BasicsAttribute[];
    instance: APP.instanceInfoType;
    updateOriginalColumn?: () => Promise<any>;
    disabled?: {
        select?: boolean;
        setting?: boolean;
    };
    fixed?: string[];
    className?: string;
    style?: React.CSSProperties;
}
export interface Config {
    columns: singleColumnType[];
    fixed?: string[];
    viewId: string;
    setLoading: (v: boolean) => void;
    setDisplay: (v: BasicsAttribute[]) => void;
    setViewId: (v: string) => void;
    updateOriginalColumn?: () => Promise<any>;
}
export interface ConfigColumnsRef {
    setConfig: (params: Config) => void;
}
export interface ServerData {
    id: string;
    name: string;
    label: string;
    value: string;
    createTime: string;
    createBy: string;
    updateTime: string | null;
    updateBy: string | null;
    isDefault: boolean;
    /** 是否只读  0否 1是，为1不可被删除 */
    readonly: '0' | '1';
    itemCode: string | number;
    tabCode: string | number;
    /** 范围  0全局 1个人，普通用户只能添加修改个人，管理员可添加修改全局 */
    scope: '0' | '1';
    objectIds: string;
    objectNames: string;
    [k: string]: any;
}
export declare const ConfigColumns: React.FC<Props & Config>;
export {};
