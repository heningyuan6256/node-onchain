/// <reference types="react" />
import { BasicsAttribute } from '../../utils/attribute';
import { APP } from '../../typings';
export interface CustomRenderParams {
    instanceInfo: APP.instanceInfoType;
    attr?: BasicsAttribute;
    getValue?: (value: any) => any;
    oldVal?: any;
    isProcess?: boolean;
    listTypeData: Record<string, Record<string, any>[]>;
    suffix?: {
        [k: string]: any;
    };
    onClick?: (type: keyof WindowEventMap, { attr }: {
        attr: BasicsAttribute;
        [k: string]: any;
    }) => void;
}
export declare const direct: string[];
export declare const unmarked: string[];
export declare function generateCustomRenderParams(params: {
    instanceInfo: APP.instanceInfoType;
    oldVal: any;
    isProcess?: boolean;
    attr: BasicsAttribute;
    listTypeData: any;
    suffix?: {
        [k: string]: any;
    };
}): CustomRenderParams;
type ChildProps = CustomRenderParams & {
    value?: any;
};
/** 文件名称  */
export declare const FileName: React.FC<ChildProps>;
/** 产品角色  */
export declare const ProductRoles: React.FC<ChildProps>;
/** 渲染当前节点  */
export declare const currentNode: React.FC<ChildProps>;
/** 文本 红线标记 */
export declare const DefaultShowMark: React.FC<ChildProps>;
export declare const defaultCustomRender: Record<string, React.FC<CustomRenderParams>>;
export {};
