import { BasicsAttribute } from '../../utils/attribute';
import { TabInfo } from '../../hooks/useTabInfo/type';
import { APP } from '../../typings';
export declare const formItemMap: Record<string, any>;
export declare const searchFormItemMap: Record<string, any>;
export declare const getTableColumns: (itemCode: string, instanceId: string, tabInfo: {
    tab: string;
    tabCode: string;
}, isPreview: boolean, objectIconMaps: any, onRequestSuccessful?: ((data: any[], canViewColumnMap?: Record<string, any>, canEditColumnMap?: Record<string, any>) => void) | undefined) => Promise<any>;
export declare const setChangeEffectTableDefaultValue: (tableColumns: {
    [k: string]: any;
    apicode: string;
    dataIndex: string;
}[], data: Record<string, any>[], instanceInfo: Record<string, string>) => Promise<Record<string, any>[]>;
/** 校验数据 */
export declare const tableCheckData: (params: {
    data: any;
    tabInfo: TabInfo;
    tableData: any[];
    tableColumns: any[];
    latestPersonality: React.MutableRefObject<APP.Personality | null>;
    originTableColumns: BasicsAttribute[];
    instanceInfo: APP.instanceInfoType;
    getExistId: () => string[];
    getTaskDeliver: () => Promise<any>;
}) => Promise<any[]>;
/** 属性列是否禁用（true禁用，false可编辑） */
export declare const getCanNotEdit: (params: {
    instanceInfo: Record<string, any>;
    tabInfo: TabInfo;
    attr: BasicsAttribute;
    record?: any;
    isChange?: boolean;
    defaultResult: () => boolean;
}) => boolean | null;
