import { PlmTableColumnProps, PlmTableProps } from '../PlmTable';
import React from 'react';
import { BaseComponentProps } from '../../typings';
/**
 * @deprecated 推荐使用 `@/hooks/useTabInfo/type.d.ts` 中的 {@link TabInfo} 避免循环引用
 */
export interface tabInfoProps {
    itemCode: string | number;
    tabCode: string | number;
    tabName: string | number;
    tab: string;
    extValue?: any;
}
export interface instanceInfoProps {
    id: string;
    itemCode: string;
    currentVersion: string;
    inChangeOrderWorkflow: boolean;
    objectName: string;
    insVersion: string;
    number: string;
    extraAttr: any;
}
export interface PlmTabTemplateProps extends BaseComponentProps {
    noShowBomLevel?: boolean;
    topInstanceInfo?: Record<string, any>;
    bomReplaceNumber?: number;
    saveParams?: Record<string, any>;
    isChange?: boolean;
    isAnalyse?: boolean;
    isChangeDisposal?: boolean;
    dataSource?: Record<string, any>[];
    tabHeight?: number;
    basicHeight?: number;
    isRadio?: Boolean;
    onSelectRows?: (row: any) => void;
    isPreview?: boolean;
    noButton?: boolean;
    onSave?: Function;
    onCheckDisplay?: () => void;
    tableProps?: Omit<PlmTableProps, 'columns'>;
    topTabInfo?: tabInfoProps;
    tabInfo: tabInfoProps;
    instanceInfo: instanceInfoProps | any;
    queryParams?: Record<string, any>;
    onExtraButtonClick?: (val: string) => void;
    scrollUpdate?: (isFullscreen: boolean, autoHeight: number) => void;
    addModalQueryParams?: Record<string, any>;
}
export interface PlmTabTempeteForwardRefProps {
    handleSave: (arg1: any, arg2: any) => void;
    originalHandleSave: (arg1: any, arg2: any) => void;
    handleRefresh: (e?: string) => void;
    /** 表格数据 */
    tableData: any[];
    /** 表格列头 */
    tableColumns: PlmTableColumnProps;
    getRowSelection: () => any;
}
declare const PlmTabTemplate: React.FC<PlmTabTemplateProps>;
export default PlmTabTemplate;
