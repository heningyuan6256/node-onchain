/// <reference types="react" />
import { APP } from '../../typings';
import { BasicsAttribute } from '../../utils/attribute';
import { CallbackFn } from './const';
declare class basicAttrsUtils {
    static generateForm: (instanceInfo: Record<string, any>, isVersionOrderManager: boolean, extra?: {
        readonly?: string;
        currentUserInfo?: APP.CurrentUserInfo;
        personality?: APP.Personality | null;
    }) => Promise<{
        insAttrs: any[];
        dataValue: {
            [x: string]: any;
        };
    }>;
    static usePublicHooks: (params: {
        instanceInfo?: Record<string, any>;
        insAttrs?: BasicsAttribute[];
    }) => {
        ownerType: "" | "1";
        setOwnerType: import("react").Dispatch<import("react").SetStateAction<"" | "1">>;
        isProjectTemplate: boolean;
        setIsProjectTemplate: import("react").Dispatch<import("react").SetStateAction<boolean>>;
        reset: () => void;
        onTransferSubmit: (attr: BasicsAttribute, keys: string[], tabKey: string) => void;
    };
    static usePublicAttrSaveCallback({ isRootInst, onlyChild, instanceInfo, onAttrUpdate, onChildCallback, instanceInfoUpdateAttrs, instanceUpdate, }: {
        isRootInst?: boolean;
        onlyChild?: boolean;
        instanceInfo: APP.instanceInfoType;
        onAttrUpdate?: (attrs: any[]) => void;
        onChildCallback?: (merge: Merge, setInst: (params: SetInstParams) => void) => void;
        instanceInfoUpdateAttrs?: InstanceInfoUpdateAttrs;
        instanceUpdate?: (params: {
            /** 最新的实例 */
            instance?: APP.instanceInfoType;
        }) => void;
    }): CallbackFn;
}
export type Merge = Record<string, {
    key: string;
    value: any;
}>;
export type SetInstParams = {
    merge: Merge;
    instance: APP.ProjectInstance;
    instanceInfoUpdateAttrs?: InstanceInfoUpdateAttrs;
};
export type InstanceInfoUpdateAttrs = (params: {
    /** 给到 getDetail 的参数 */
    isGetDetailCancel?: boolean;
}) => void;
export default basicAttrsUtils;
