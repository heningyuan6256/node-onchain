/// <reference types="react" />
import { APP } from '../../typings';
import { BasicsAttribute } from '../../utils/attribute';
import { ProjectPublicAttribute, ProjectSubset } from '../../utils/project/const';
/**
 * @description 获取应该过滤掉的属性
 * @date 2022-11-29 17:58:36
 * @export
 * @param {ProjectSubset} subCode 当前项目的子集的 apicode
 * @returns {*}
 */
export declare function projectSelfFilterRules(subCode: ProjectSubset): ProjectPublicAttribute[];
/**
 * @description 合并处理
 * @date 2022-11-28 13:50:23
 * @export
 * @param {any[]} attrs 属性集合
 * @param {Function[]} fns 处理方法
 */
export declare function MergeProcessing(attrs: any[], fns: Function[]): void;
/**
 * @description 联动更新
 * @date 2022-11-21 19:34:50
 * @param {FromRef} from 表单的ref
 * @param {Attr[]} attrs 表单属性
 * @param {Object} updatedFormItem 当前表单更新数据后的 item
 * @returns {*}
 */
export declare const associationUpdate: (from: import('../../pages/PlmCreateInstance/const').FromRef<undefined>, attrs: BasicsAttribute<string>[], updatedFormItem: Object, extra?: import('../../pages/PlmCreateInstance/const').ExtraAssociationParams | undefined) => BasicsAttribute<string> | undefined;
export declare function createAttrTableData(instance: Record<string, any>, columnApicodeIdMap: Record<string, any>, BasicAttrs: BasicsAttribute[]): APP.Project['dateTableData'];
export type AttrUpdates = {
    apicode: string;
    key: string;
    value: {
        isUpdate: boolean;
        value: any;
    };
};
export type CallbackFn = (updates: AttrUpdates[]) => void;
export declare const useAttrUpdateState: (params: {
    instanceInfo: Record<string, any>;
    callback?: CallbackFn;
}) => {
    initFormData: Record<string, any>;
    setInitFormData: import("react").Dispatch<import("react").SetStateAction<Record<string, any>>>;
    attrAfterEdit: Map<string, {
        isUpdate: boolean;
        value: any;
    }>;
    updateInitFormData: (key: string, value: any) => void;
    triggeringUpdateCallback: () => Promise<void>;
    updatedAttrAfterEdit: (changeValue: Record<string, any>) => void;
};
