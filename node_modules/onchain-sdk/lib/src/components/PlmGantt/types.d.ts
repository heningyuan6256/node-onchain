import { TabInfo } from '../../hooks/useTabInfo/type';
import { APP } from '../../typings';
import type { PlanAttr } from './utils/plan-attr';
import type { InitCalendarParams } from './utils/calendar';
import type { DataUpdateManager } from './const';
import { TableGanttContextProps } from './utils/type';

export interface Props {
  /** 指定tab */
  tabInfo: TabInfo;
  /** 指定实例 */
  instanceInfo: APP.ProjectInstance<PlanAttr>;
  /** 页面实例 */
  pageInstanceInfo?: APP.instanceInfoType;
  /** 是否是预览 */
  isPreview?: boolean;
  /** 是否开启红线标记 */
  isSign?: boolean;
  /** 是否是 项目变更实施页 */
  isProjectChange?: boolean;
  /** 是否关闭操作按钮 */
  closeOperationBtn?: boolean;
  /** 是否关闭gantt */
  closeGantt?: boolean;
  /** 是否展示全部列 */
  showAllCol?: boolean;
  /** 是否展示全部列 */
  tabHeight?: number;
  /** 是否是显示在弹出内 */
  isDwarfLayout?: boolean;
  /** Table或者Gantt的高度（不包括操作栏）变化时触发 */
  onOuterLayerHeight?: (height: number) => void;
  /** 刷新实施页签 (table数据更新时触发) */
  onEffectRefresh?: () => void;
}

export type CalendarParams = {
  isNew: boolean;
  week: InitCalendarParams['week'];
  extraCalendar?: InitCalendarParams['extraCalendar'];
};

export type UpdateRoleType = (id: string, keyId: string, update: DataUpdateManager['generateServerUpdate'], context: TableGanttContextProps) => void;
