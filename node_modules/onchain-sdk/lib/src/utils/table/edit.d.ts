import { APP } from '../../typings';
import { TabInfo } from '../../hooks/useTabInfo/type';
/**
 * @description 给table数据添加修改标记
 * @date 2023-02-07 15:35:42
 * @param {({
 *   rowKey: string | (() => string);
 *   tableData: any[];
 *   record: Record<string, any>;
 *   col: Record<string, any>;
 * })} {
 *   tableData,
 *   rowKey,
 *   record,
 *   col,
 * } record：修改后的新数据 | col：当前修改列列头
 * @returns {*}
 */
export declare const handleUpdate: ({ tableData, rowKey, record, col, }: {
    rowKey: string | (() => string);
    tableData: any[];
    record: Record<string, any>;
    col: Record<string, any>;
}) => any[];
/**
 * @description 给table数据添加删除标记
 * @date 2023-02-07 15:34:31
 * @param {{ delIds: string[]; tableData: any[]; record: Record<string, any>; col: Record<string, any> }} { tableData, delIds }
 * @returns {*}
 */
export declare const handleDel: ({ tableData, delIds }: {
    delIds: string[];
    tableData: any[];
}) => any[];
/**
 * @description 将新数据转为table需要的数据
 * @date 2023-02-07 15:38:37
 * @param {{
 *   tableColumns: any[];
 *   tableData: any[];
 *   newData: any[];
 *   itemCode: string;
 *   tab: string;
 *   tableListCodeMap: Record<string, any>;
 * }} {
 *   itemCode,
 *   tab,
 *   tableData,
 *   tableColumns,
 *   newData,
 *   tableListCodeMap,
 * }
 */
export declare const handleAdd: ({ itemCode, tab, tableData, tableColumns, newData, tableListCodeMap, isPreposition, }: {
    tableColumns: any[];
    tableData: any[];
    newData: any[];
    itemCode: string;
    tab: string;
    tableListCodeMap: Record<string, any>;
    /** 新数据是否放在最前面（默认：true） */
    isPreposition?: boolean | undefined;
}) => {
    newAddData: any;
    newTableData: any[];
};
/**
 * @description table单元格向下填充向上填充
 * @date 2023-02-10 09:17:09
 * @param {({
 *   type: 'down' | 'up';
 *   fillValue: APP.InitialState['selectedCell'];
 *   tableData: any[];
 *   tableColumns: any[];
 * })} {
 *   tableColumns,
 *   tableData,
 *   type,
 *   fillValue,
 * }
 * @returns {*}
 */
export declare function handleFill({ tableColumns, tableData, type, fillValue, }: {
    type: 'down' | 'up';
    fillValue: APP.InitialState['selectedCell'];
    tableData: any[];
    tableColumns: any[];
}): any[];
export declare const judgeMpnData: ({ tableData, tableColumns, tableListCodeMap, }: {
    tableColumns: any[];
    tableData: any[];
    tableListCodeMap: Record<string, any>;
}) => {
    map: any;
    PreferenceRowlength: number;
    preferenceColumnDataIndex: any;
};
/**
 * @description 取消对当前table的数据更改
 * @date 2023-02-10 09:21:04
 * @export
 * @param {any[]} tableData
 * @returns {*}
 */
export declare function cancelTableDataChange(tableData: any[]): any;
export declare const useEffectTemporary: ({ tabInfo, tableData }: {
    tabInfo: TabInfo;
    tableData: any[];
}) => void;
/**
 * @description 将服务端请求的新数据合并到当前table
 * @date 2023-02-10 09:18:35
 * @export
 * @template T
 * @param {{
 *   target: T[];
 *   data: T[];
 *   match: (targetItem: T, dataItem: T) => boolean;
 * }} {
 *   target,
 *   data,
 *   match,
 * }
 * @returns {*}
 */
export declare function tableMergeUpdate<T = Record<string, any>>({ target, data, isInit, isCopy, match, }: {
    target: T[];
    data: T[];
    isInit?: boolean;
    isCopy?: boolean;
    match: (targetItem: T, dataItem: T) => boolean;
}): any[];
