import { APP } from '../typings';
/**
 * @Description Storage控制器，管理storage中的数据,控制storage的输出
 * @Author ripple
 * @Date 2021/08/25 17:50:54
 */
type StorageKey = 'token' | 'refreshToken' | 'loginCatch' | 'pageInfo' | 'historyBackOff' | 'clientIds' | 'userId' | 'isScreen' | 'collapsed' | 'orgCode' | 'transferChoose';
type StorageType = 'localStorage' | 'sessionStorage';
type LoginCatchProps = {
    rememberme: boolean;
    email: string;
    password: string;
} | undefined;
declare class Storage<T> {
    private key;
    private defaultValue;
    private type;
    constructor(key: StorageKey, defaultValue: T, type: StorageType);
    get: () => T;
    set: (value: T) => void;
    remove: () => void;
    clear: () => void;
}
export declare const StorageController: {
    token: Storage<string>;
    refreshToken: Storage<string>;
    sessionToken: Storage<string>;
    loginCatch: Storage<LoginCatchProps>;
    historyBackOff: Storage<APP.historyBackOff>;
    collapsed: Storage<string>;
    isScreen: Storage<string>;
    userId: Storage<string>;
    orgCode: Storage<string>;
    transferChoose: Storage<string>;
};
export {};
