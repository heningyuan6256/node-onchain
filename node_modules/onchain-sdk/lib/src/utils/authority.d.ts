/// <reference types="react" />
import { tabInfoProps } from '../components/PlmTabTemplate';
import { APP } from '../typings';
export declare const noControlledTabs: Record<string, any>;
export type Mosaic = '~#~';
export declare class Authority {
    /** 马赛克`~#~` */
    static mosaic: Mosaic;
    /**
     * 判断有阅读权限
     */
    static readPermission(value: string): boolean;
    static handlingError(value: string): string;
    static displayData(value: string, inLine?: boolean): string | JSX.Element;
    /** 是否是马赛克 */
    static isMosaic<T>(value: T | Mosaic): value is Mosaic;
    static renderIsMosaic(value: string | Mosaic, children: React.ReactNode, inLine?: boolean): import("react").ReactNode;
    static getEditAndControlledState(props: {
        /** 是否在变更中 */
        isChange?: boolean;
        /** 是否在受影响分析中 */
        isAnalyse?: boolean;
        /** 是否在变更处置中 */
        isChangeDisposal?: boolean;
        /** 是否判断版本 */
        isJudgeVersion?: boolean;
        /** 页签信息 */
        tabInfo: tabInfoProps;
        /** 是否是版次管理 */
        isVersionOrderManager?: boolean;
        /** 变更页签信息 */
        topTabInfo?: tabInfoProps;
        /** 顶层变更实例 */
        topInstanceInfo?: Record<string, any>;
        /** 是否是预览 */
        isPreview?: boolean;
    }, 
    /** 实例信息 */
    instanceInfo: APP.ProjectInstance | APP.MaterialInstance | APP.FileInstance | APP.instanceInfoType): {
        /** 是否是 非草稿状态 */
        notDraftVersion: boolean | "";
        /** 不能编辑 */
        uneditable: any;
        /** 是否是受控 tab */
        isControlled: boolean;
        /** 禁止编辑状态 */
        state: any;
        /** 错误原因提示消息 */
        messageData: {
            data: string;
            type: string;
        };
    };
}
