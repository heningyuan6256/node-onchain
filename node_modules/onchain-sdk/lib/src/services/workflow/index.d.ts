import { ResponseData } from '../../typings';
export default class WorkflowService {
    static createWorkflow(data: any): Promise<ResponseData>;
    static getWorkflow(id: string): Promise<ResponseData>;
    static startWorkflow(data: any): Promise<ResponseData>;
    static judgeWorkflow(data: any): Promise<ResponseData>;
    static signWorkflow(data: any): Promise<ResponseData>;
    static rejectWorkflow(data: any): Promise<ResponseData>;
    static getWorkflowInfomation(params: {
        id: string;
    }): Promise<ResponseData>;
    static urgeWorkflow(data: any): Promise<ResponseData>;
    static workflowTransfer(data: any): Promise<ResponseData>;
    static workflowAddUser(data: any): Promise<ResponseData>;
    static workflowDelUser(data: any): Promise<ResponseData>;
    static workflowConfirmUser(data: any): Promise<ResponseData>;
    static workflowReplaceUser(data: any): Promise<ResponseData>;
    static workflowCancelUser(data: any): Promise<ResponseData>;
    static batchApprove(data: any): Promise<ResponseData>;
    static batchConfirm(data: any): Promise<ResponseData>;
    static batchReject(data: any): Promise<ResponseData>;
    static cancelPublish(data: any): Promise<ResponseData>;
    static isLock(id: any): Promise<ResponseData>;
    static sendWorkflow(data: any): Promise<ResponseData>;
    static updateApproveDetail(data: any): Promise<ResponseData>;
}
