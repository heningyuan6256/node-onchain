import { ResponseData } from '../../typings';
import { BasicsItemCode } from '../../utils/itemCode';
export declare function getCommonParameter(): {
    tenantId: string;
    userId: string;
};
type Res = Promise<ResponseData>;
export default class ProjectService {
    /** 项目管理-项目列表 */
    static getProjectListData(data: {
        pageNo?: number;
        pageSize?: number;
        sort?: string;
        andQuery?: string;
        productId?: string;
        itemCodes?: string;
    }): Res;
    /** 产品分类-实例查询 */
    static getInsByDir(data: {
        pageNo: number;
        pageSize: number;
        sort?: string;
        andQuery?: string;
        productId: string;
        itemCodes: Array<string>;
        existIdList?: Array<string>;
    }): Res;
    /** 计划导入-检查项目名称（是否重名，false不重名为可用） */
    static checkProjectName(data: {
        name: string;
        workspaceId: string;
    }): Res;
    /** 项目管理-项目启动 */
    static projectStartup(data: {
        id: string;
    }): Res;
    /** 项目管理-计划页签列表数据 */
    static getPlanListData(data: {
        instanceId: string;
        version: string;
        versionOrder: number | string;
    }): Res;
    /** 项目管理-实施项目-计划页签列表数据 */
    static getChangePlanListData(data: {
        instanceId: string;
        itemCode: string;
        affectInsId: string;
        tabCode: string;
    }): Res;
    /** 项目变更-实施项目计划添加 */
    static changeBuildPlan(data: {
        id?: string;
        pid?: string;
        projectId?: string;
        targetId?: string;
        changeInstanceId?: string;
    }): Res;
    /** 项目变更-实施项目计划修改 */
    static changeSave(data: {
        deleteRowIds: string[];
        id: string;
        versionNumber: string;
        tabCode: string;
        rowList: [];
        updateInstances: any[];
        itemCode: string;
        affectedInstanceIds: string;
        instanceId: string;
    }): Res;
    /** 项目管理-计划页签-添加列表 */
    static getAddPlanListData(data: {
        pageNo?: number;
        pageSize?: number;
        sort?: string;
        keyword?: string;
        productId?: string;
        objIds?: string;
        itemCodes?: string;
        pid?: string;
    }): Res;
    /** 项目管理-计划页签-添加实例(绑定实例) */
    static buildPlan(data: {
        id?: string;
        pid?: string;
        projectId?: string;
        targetId?: string;
        isAffect?: boolean;
        version?: string;
        versionOrder?: string | number;
    }): Res;
    /** 项目管理-计划页签-计划删除(解绑) */
    static unbindPlan(data: {
        instanceIds?: string;
        pid?: string;
        projectId?: string;
    }): Res;
    /** 项目管理-计划页签-计划删除(右侧实际删除) */
    static deleteProject(data: {
        instanceIds: string;
    }): Res;
    /** 项目管理-计划页签-修改保存实例 */
    static saveEditPlan(data: any[]): Res;
    /** 项目管理-计划导入-文件上传 */
    static planImportProject(data: any[]): Res;
    static getUserTeamRoleList(data: {
        userId: string;
        productId: string;
    }): Res;
    /** 资源列表-用户角色列表 */
    static getResourceCount(data: {
        instanceId: string;
        pageNo: number;
        pageSize: number;
        andQuery: string;
        sort: string;
        itemCode: number;
        version: string;
        versionOrder: string;
        tabCode: number | string;
        tabCodes: number | string;
        pid?: string;
    }): Res;
    /** 资源列表汇总-导出 */
    static resourceCountExport(data: {
        instanceId: string;
        pageNo: number;
        pageSize: number;
        andQuery?: string;
        sort?: string;
        itemCode: number;
        version: string;
        versionOrder: string;
        tabCode: number | string;
        tabCodes: number | string;
        pid?: string;
    }): Res;
    /** 项目费用-按科目-导出 */
    static subjectExport(data: {
        instanceId: string;
        itemCode: string;
        tabCodes: string;
        version: string;
        versionOrder: string;
    }): Res;
    /** 项目管理-项目实例转移所有者(资源页通用) */
    static transferOwner(data: {
        id: string;
        pid?: string;
        version: string;
        userId: string;
        versionOrder: string | number;
        targetUserId: string;
    }): Res;
    /** 项目费用-任务视图列表数据(费用任务tree) */
    static getCostListData(data: {
        instanceId: string;
        version: string;
        versionOrder: number | string;
    }): Res;
    /** 项目费用-列表修改保存 */
    static saveEditCost(data: any[]): Res;
    /** 计划页签-获取实例序号 */
    static getAllSerialNumber(data: {
        projectId: string;
    }): Res;
    /** 资源-个人利用率查询 */
    static getUserOccupancy(data: {
        projectId: string;
        instanceId: string;
        userId: string;
    }): Res;
    /** 资源-资源列表利用率查询 */
    static getResourceOccupancy(data: {
        andQuery?: string;
        sort?: string;
        instanceId: string;
        itemCode: string | number;
        version: string;
        pageNo: number;
        pageSize: number;
        tabCode: string | number;
        tabCodes: string | number;
        pid?: string;
        projectId: string;
        startDate: string;
        endDate: string;
    }): Res;
    /** 项目管理-产品用户列表 */
    static getProjectAllUser(productId?: string): Promise<ResponseData | null>;
    /** 概况-交付统计 */
    static getDeliveryCount<T = Record<'deliveryCount' | 'deliveryNeedCount' | 'deliveryNeedMustCount' | 'deliveryTotalCount' | 'targetDeliveryCount', number>>(data: {
        instanceId: string;
    }): Promise<ResponseData<T>>;
    /**
     * @description 延期任务
     * @date 2023-04-03 16:47:22
     * @static
     * @param {({ instanceId: string, type: '0' | '1' | '2' })} data type表示请求类型 0即将开始 1延期开始 2延期完成
     * @returns {*}
     * @memberof ProjectService
     */
    static getDeferredProject(data: {
        instanceId: string;
        type: '0' | '1' | '2';
        sort?: string;
        andQuery?: string;
    }): Promise<any>;
    /** 目标交付-子集任务列表 */
    static getChildrenTask(data: {
        instanceId: string;
    }): Res;
    /** 目标交付-目标交付物转移 */
    static transferDeliver(data: {
        id: string;
        versionOrder: any;
        targetId: string;
    }): Res;
    /** 项目管理-查询实例前后置+目标交付 */
    static checkInstanceHandle(data: {
        instanceId: string;
    }): Promise<any>;
    /** 项目管理-模板实例列表 */
    static templateInstanceList(data: {
        pageNo?: number;
        pageSize?: number;
        keyword?: string;
    }): Res;
    /** 项目管理-另存为创建项目 | 项目管理-以模板创建项目; 通过 isTemplate: true | false 去区分 */
    static templateCreateProject(data: Record<string, any>): Res;
    /** 项目变更-查询实施对象的日历id */
    static getLatestCalendar(data: {
        instanceId: string;
        affectInsId: string;
    }): Res;
    /** 项目管理-查询多实例前后置+目标交付 */
    static checkInstancesHandle(data: {
        instanceIds: string[] | string;
        version: string;
        versionOrder: string;
    }): Res;
    /** 项目管理-概览-里程碑列表 */
    static getMilestones(data: {
        instanceId: string;
        sort?: string;
        version: string;
        versionOrder: string;
    }): Res;
    /** 项目管理-概览-项目基线列表 */
    static getProjectBaselineList(data: {
        instanceId: string;
        version?: string;
        versionOrder?: string;
    }): Res;
    /** 项目管理-获取任务实例前置任务和目标交付的完成情况 */
    static getCheckTaskPreComplete(data: {
        instanceId: string;
    }): Res;
    /** 目标交付-获取支持交付的子分类列表 */
    static taskDeliver(): Res;
    /** 项目变更-实施项目重置 */
    static projectProcessRest(data: {
        instanceId: string;
        affectedId: string;
    }): Res;
    /** 项目-项目签出 */
    static projectCheckout(data: {
        insId: string;
    }): Res;
    /** 项目-项目签入 */
    static projectCheckin(data: {
        insId: string;
    }): Res;
    /** 项目-项目取消签出 */
    static projectCancelCheckout(data: {
        insId: string;
    }): Res;
    /** 首页-待接受任务-同意转移 */
    static projectAcceptTransferTask(ids: string | string[]): Res;
    /** 首页-待接受任务-拒绝转移 */
    static projectRejectTransferTask(ids: string | string[]): Res;
    /** 项目管理-项目状态变更-新生命周期列表 */
    static getNewLifeCycleList(affectIds: string | string[]): Res;
    /** 项目管理-项目状态变更-新生命周期列表 */
    static getNewVersion(affectIds: string | string[]): Res;
    /** 项目管理-项目状态变更-新生命周期列表 */
    static getProjectLifeCycleList(itemCode?: BasicsItemCode.project): Res;
    /** 项目管理-项目费用-查询项目科目费用 */
    static getInstanceAccountBudget(data: {
        instanceId: string;
        versionOrder: string;
    }): Res;
}
export {};
