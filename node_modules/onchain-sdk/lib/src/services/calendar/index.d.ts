import { APP, ResponseData } from '../../typings';
/**
 * 日历
 */
export default class CalendarService {
    static calendarList(): Promise<ResponseData>;
    static calendarDetail(data: any): Promise<ResponseData>;
    /**
     * @description 获取 gantt 创建日历需要的参数结构
     * @date 2023-03-14 11:33:23
     * @static
     * @param {{ id: string; project?: APP.ProjectInstance['project'] }} { id, project }
     * ```
     *  id：日历id（{calendarId}-{}）
     *  project：在项目管理时可以传递这个参数避免多次请求
     * ```
     * @returns {*}
     * @memberof CalendarService
     *
     * ```
     *  const createParams = await getGanTtCalendar({...});
     *  if (createParams) {
     *    const calendar = createCalendar(createParams);
     *  }
     * ```
     */
    static getGanttCalendar({ id, project }: {
        id: string;
        project?: APP.ProjectInstance['project'];
    }): Promise<{
        gantt: import("dhtmlx-gantt").GanttStatic;
        isNew: boolean;
        week: (0 | 1)[];
        extraCalendar: {
            [x: string]: {
                from: Date;
                to: Date;
                hours: string[];
                days: any[];
            };
        }[];
        startFormat: string;
        endFormat: string;
        primitiveId: string;
    } | undefined>;
    static calendarSaveAs(data: any): Promise<ResponseData>;
    static calendarDelete(id: any): Promise<ResponseData>;
    static getExtraCalendar(data: {
        calendarId: string;
        [k: string]: any;
    }): Promise<any>;
    static calendarEdit(data: any): Promise<ResponseData>;
    static setDefault(data: any): Promise<ResponseData>;
    static calendarLog(data: any): Promise<ResponseData>;
    static calendarQuery(data: any): Promise<ResponseData>;
    static exceptionList(data: any): Promise<ResponseData>;
    static exceptionAdd(data: any): Promise<ResponseData>;
    static exceptionEdit(data: any): Promise<ResponseData>;
    static exceptionDelete(data: any): Promise<ResponseData>;
    static getCalendarUsedInsList(data: any): Promise<ResponseData>;
    static updateInstance(data: any): Promise<ResponseData>;
    static exportCalendarUsedInsData(data: any): Promise<ResponseData>;
    static getAttributes(data: any): Promise<ResponseData>;
}
