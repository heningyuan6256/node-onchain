import React from 'react';
import { MatchNumberCxt } from './types';
import { Row } from './match/type';
export declare const MatchNumberContext: React.Context<MatchNumberCxt>;
export declare enum TabKey {
    Match = "1",
    Preview = "2"
}
export declare class DataManage {
    /** 全部选项数据 */
    allData: Row[];
    /** 预览数据 */
    data: Row[];
    /** 预览新增数据 */
    addData: Row[];
    newValue: Record<string, Record<string, any>>;
    merge: Map<string, number>;
    /** 原始的添加数据 */
    primitiveAddData: Map<any, any>;
    isBeAbleSubmit: (error: (row: Row) => React.ReactNode) => boolean;
    constructor();
    /** 初始化全部选项 */
    initAllData(data: Row[]): void;
    getAllData(): ({
        newVal?: Record<string, any> | undefined;
        previewDisabled: boolean;
        Num: number | undefined;
        className?: "error" | "info" | "waning" | undefined;
        relIds?: string[] | undefined;
        tipIds?: string[] | undefined;
        repelIds?: string[] | undefined;
        disabled?: boolean | undefined;
        children?: Row[] | undefined;
        isMultiple?: boolean | undefined;
        isRequired?: boolean | undefined;
        id?: string | undefined;
        insId?: string | undefined;
        productId?: string | undefined;
        productName?: string | undefined;
        insDesc?: string | undefined;
        itemCode?: any;
        objectName?: string | undefined;
        objectId?: string | undefined;
        objectApicode?: string | undefined;
        BasicAttrs?: import("../../../utils/attribute").BasicsAttribute<string>[] | undefined;
        updateInstanceVo?: Record<string, any> | undefined;
        allTabs?: import("../../../typings").APP.Tab[] | undefined;
        tabs?: any[] | undefined;
        effectTabs?: any;
        tabInsCountMap?: any;
        insBom?: boolean | undefined;
        inChangeOrderWorkflow?: any;
        affectedInPCO?: boolean | undefined;
        affectedIn?: string | undefined;
        workflowId?: string | undefined;
        number?: string | undefined;
        Name?: string | undefined;
        currentVersion?: string | undefined;
        currentVersionOrder?: string | undefined;
        insVersion?: string | undefined;
        insVersionOrder?: string | number | undefined;
        insVersionWithAuth?: string | undefined;
        insVersionOrderWithAuth?: string | undefined;
        insVersionUnbound?: string | undefined;
        insVersionOrderUnbound?: string | undefined;
        checkout?: boolean | undefined;
        attributes?: {
            [k: string]: any;
        } | undefined;
        attributeList?: {
            [k: string]: any;
            apiCode: string;
            attrId: string;
            attrValue: string;
        }[] | undefined;
        attributeStyle?: import("../../../utils/external-attribute").AttributeStyle | undefined;
        userDetails?: {
            [k: string]: any;
        } | undefined;
        userItemCode?: any;
        UserContent?: {
            [k: string]: any;
        } | undefined;
        archivingStatus?: import("../../../utils/itemCode").ArchivingStatusType | undefined;
    } | {
        [x: string]: any;
        className?: "error" | "info" | "waning" | undefined;
        relIds?: string[] | undefined;
        tipIds?: string[] | undefined;
        repelIds?: string[] | undefined;
        disabled?: boolean | undefined;
        previewDisabled?: boolean | undefined;
        children?: Row[] | undefined;
        isMultiple?: boolean | undefined;
        isRequired?: boolean | undefined;
        id?: string | undefined;
        insId?: string | undefined;
        productId?: string | undefined;
        productName?: string | undefined;
        insDesc?: string | undefined;
        itemCode?: any;
        objectName?: string | undefined;
        objectId?: string | undefined;
        objectApicode?: string | undefined;
        BasicAttrs?: import("../../../utils/attribute").BasicsAttribute<string>[] | undefined;
        updateInstanceVo?: Record<string, any> | undefined;
        allTabs?: import("../../../typings").APP.Tab[] | undefined;
        tabs?: any[] | undefined;
        effectTabs?: any;
        tabInsCountMap?: any;
        insBom?: boolean | undefined;
        inChangeOrderWorkflow?: any;
        affectedInPCO?: boolean | undefined;
        affectedIn?: string | undefined;
        workflowId?: string | undefined;
        number?: string | undefined;
        Name?: string | undefined;
        currentVersion?: string | undefined;
        currentVersionOrder?: string | undefined;
        insVersion?: string | undefined;
        insVersionOrder?: string | number | undefined;
        insVersionWithAuth?: string | undefined;
        insVersionOrderWithAuth?: string | undefined;
        insVersionUnbound?: string | undefined;
        insVersionOrderUnbound?: string | undefined;
        checkout?: boolean | undefined;
        attributes?: {
            [k: string]: any;
        } | undefined;
        attributeList?: {
            [k: string]: any;
            apiCode: string;
            attrId: string;
            attrValue: string;
        }[] | undefined;
        attributeStyle?: import("../../../utils/external-attribute").AttributeStyle | undefined;
        userDetails?: {
            [k: string]: any;
        } | undefined;
        userItemCode?: any;
        UserContent?: {
            [k: string]: any;
        } | undefined;
        archivingStatus?: import("../../../utils/itemCode").ArchivingStatusType | undefined;
    })[];
    setData(data: Row[]): void;
    verify(data: Row[], selects: Row[]): void;
    storePreviewData(data: Row[]): void;
}
