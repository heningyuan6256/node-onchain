import { Row } from './type';
export declare const defaultState: () => {
    data: Row[];
    flatData: Row[];
    selects: Row[];
    rel: Record<string, PlmProject.Relation<Row>>;
    expandedRowKeys: string[];
    whether: Record<string, any>;
};
type MatchState = ReturnType<typeof defaultState>;
export declare class Linkage {
    static ID: string;
    static ROW_ID: string;
    static CHILDREN: string;
    state: MatchState;
    actualSelection: Set<string>;
    private linkageMap;
    constructor(data: MatchState);
    getProxy: (v: any) => Row | undefined;
    isCheck(data: Row): boolean;
    uncheck(record: Row): void;
    check(record: Row): void;
    selectRow(row: Row): void;
    private basicsSelectRow;
    getParent(row: Row): Row | undefined;
    getSiblingId(row: Row): string[];
    private siblingIsLinkage;
    private updatedShowState;
    private handleCheck;
    private selectMethod;
}
export {};
