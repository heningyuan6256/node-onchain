import { APP } from '../../../typings';
import { ButtonConfig } from '../../../components/PlmTabToolBar/types';
import type { DataManage, TabKey } from './const';

export interface MatchNumberProps {
  spectrumId: string;
  onSubmit?: (instance: APP.instanceInfoType) => void;
}

export interface MatchNumberRef {
  open: (params: { instance?: APP.instanceInfoType }) => void;
  close: () => void;
}

export interface MatchNumberState {
  instance: APP.instanceInfoType | null;
  bts: ButtonConfig[];
  visible: boolean;
  basicsBts: Promise<ButtonConfig[]>;
  active: TabKey;
  save: React.MutableRefObject<() => Promise<void>>;
  modalWidth: number;
  tableHighly: number;
}

export interface MatchNumberCxt extends MatchNumberProps, MatchNumberState {
  loading: boolean;
  dataManage: DataManage;
  closeModal: () => void;
  setInstance: (inst: APP.instanceInfoType, bts?: ButtonConfig[]) => Promise<void>;
  spectrumCheckInsEdit: (insId: string) => Promise<boolean>;
  getPreviewButton: (inst: APP.instanceInfoType) => Promise<{
    isEdit: boolean;
    value: ButtonConfig[];
  }>;
  /** tabs 跳转 */
  toTab: (key: TabKey) => void;
  /** 是否是完整的实例 */
  isCompleteInstance: () => boolean;
  /** 设置保存函数 */
  setSave: (value: MatchNumberState['save']) => void;
}
