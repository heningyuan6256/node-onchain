import React from 'react';
import { HomePageContextValue } from './types';
import { HomeTabKey } from '../../../components/PlmHomeLayout/utils';
import { HealthStatus } from '../../../utils/project/const';
import { Color } from '../../../components/PlmBadge';
import { DefaultOptionType } from 'antd/es/select';
export declare const HomePageContext: React.Context<HomePageContextValue>;
export declare enum HomeColumnAttribute {
    /** 序号 */ No = "No",
    /** 编号 */ Number = "Number",
    /** 名称 */ Name = "Name",
    /** 名称 */ Description = "Description",
    /** 描述 */ Note = "Note",
    /** 创建人 */ CreateUser = "CreateUser",
    /** 当前节点 */ CurrentWFNode = "CurrentWFNode",
    /** 所属产品 */ Product = "Product",
    /** 类型 */ Category = "Category",
    /** 状态 */ Status = "Status",
    /** 产品型号 */ ProductModel = "ProductModel",
    /** 生效时间 */ ReleaseTime = "ReleaseTime",
    /** 创建时间 */ CreateTime = "CreateTime"
}
export declare enum BadgeButton {
    /** 未启动 */
    notStart = "not_start",
    /** 进行中 */
    underway = "underway",
    /** 已延期 */
    delay = "delay",
    /** 变更中 */
    changing = "changing",
    /** 已完成 */
    failure = "failure",
    /** 暂停取消 */
    pauseCancel = "pause_cancel",
    /** 执行中 */
    carryOut = "carry_out",
    /** 延期关闭 */
    deferredClosure = "deferred_closure",
    /** 等待执行 */
    awaitCarryOut = "await_carry_out",
    /** 延期执行 */
    deferredCarryOut = "deferred_carry_out"
}
export declare function getBadgeButtonValue(button: BadgeButton): string;
export declare enum ActiveButton {
    allDays = "alldays",
    oneDays = "onedays",
    sevenDays = "sevendays",
    thirtyDays = "thirtydays",
    longDays = "longdays"
}
type HomeUrlQuery = {
    tableKey: HomeTabKey;
    badgeSearch?: BadgeButton;
};
export declare function toHomeTable(params: HomeUrlQuery): void;
export declare function useHomeUrlQuery(): HomeUrlQuery;
export declare function getOptionValue(key: HealthStatus | BadgeButton): string;
export declare function isHealthStateColumnFiltrate(tabKey: HomeTabKey): boolean;
export declare function isProjectBadgeButtonFiltrate(tabKey: HomeTabKey): boolean;
export declare function isMyProject(tabKey: HomeTabKey): boolean;
export declare function getBadgeContent({ text, type }: {
    text?: string;
    type: HealthStatus | Color;
}): React.DetailedReactHTMLElement<{
    className: string;
}, HTMLElement>;
export declare function getHealthStateColConfig(tabKey: HomeTabKey): {
    options: DefaultOptionType[];
    state: Record<string, any>;
};
export {};
