/// <reference types="react" />
import { PlmFormForwardRefProps } from '../../components/PlmForm';
import { APP } from '../../typings';
import { ForbiddenTime } from '../../utils/project';
import { Moment } from 'moment';
export interface PlmCreateInstanceProps {
    visible: boolean;
    onChangeObjectId: (id: string, title: string) => void;
    onDestory?: (data?: any) => void;
    onSubmit?: (data: any) => void;
    onNextStep?: (values: any, form: any) => void;
    onLastStep?: () => void;
    parent?: {
        name: string;
        type: string;
        forbiddenTime?: ForbiddenTime | ForbiddenTime[];
    };
    step?: number | string;
    filterAttrApiCode?: string[];
    /** 给外部提供处理 formItem */
    onHandleItemData?: (arr: any[]) => any[];
    /** 给外部提供处理 表单处理结果 */
    onHandleFormData?: (form: Record<string, any>, base: Record<string, any>, addRecord: Record<string, any>, addRecordData: Record<string, any>) => void | Promise<any>;
    /** 日历 */
    calendar?: PlmProject.GanttCalendarInstance<Moment>;
    /** 给外部提供处理 form 变化 */
    onHandleValuesChange?: (form: React.MutableRefObject<PlmFormForwardRefProps | undefined>, data: ItemData, value: any) => void;
    /** 另存为的数据源实例 */
    saveAsInstance?: APP.instanceInfoType;
    /** 展示能创建的全部子级 */
    showAllSub?: boolean;
    /** 是否是另存为 */
    isSaveAs?: boolean;
    [k: string]: any;
    width?: number | undefined;
}
interface ItemData {
    fixAttr: Record<string, any>;
    insAttrs: Record<string, any>[];
    numberAttr: Record<string, any>;
    orgAttr: Record<string, any>;
    totalAttrs: Record<string, any>[];
    departData: Record<string, any>[];
    cnkiVisible: boolean;
    cnkiName: string;
    cnkiData: Record<string, any>[];
    participle: any;
    cnkiKeyword: any;
}
declare const PlmCreateInstance: React.FC<PlmCreateInstanceProps>;
export default PlmCreateInstance;
